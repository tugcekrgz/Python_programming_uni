# -*- coding: utf-8 -*-
"""PythonProgramlamaDersi7.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/17E6VVMpgozbzNSE1b-9uVyPqBQIbotV-
"""

def ikiKat(x):
  return x*2

def birCikar(x):
  return x-1

def kareAl(x):
  return x**2


import math as matematik

fonksiyonlarListesi=[

                     ikiKat,
                     birCikar,
                     kareAl,
                     matematik.sqrt
]

sayı=5
for i in fonksiyonlarListesi:
  sayı=i(sayı)
  print(sayı)

#fonksiyon içinde fonksiyon yazma

def yazdır():
  def yazıcı():
    print("merhaba dünya")
  return yazıcı

sonuc=yazdır()
sonuc()

sonuc=yazıcı()
sonuc()   #hata verir çünkü yazıcı yazdırın içinde altında tanımlı private bir fonksiyon

def carp(a):
  def carpma(x):
    return x*a
  return carpma

sonuc1=carp(1)
sonuc2=carp(2)
sonuc3=carp(3)

sonuc1(2)

sonuc2(3)

liste=[0,1,2,3,4,6,7,8,9]

kareListe=[]

for i in liste:
  kareListe.append(i**2)

print(kareListe)

def kareHesapla(x):
  return x**2

kareHesapla(liste) #hata alırız çümkü yukarıdaki tanımdaki x tek bir değer gibi düşünür fakat listenin içinde çok değer vardır işin içinden çıkamaz.



"""#MAP FONKSİYONU
birden fazla değer alırız
liste ve tuple larda kullanılır.
"""

kareHesaplaSonuc=list(map(kareHesapla,liste))
print(kareHesaplaSonuc)

kareHesapla1=lambda x :x**2               #işimize yaramadı lambda çünkü yine map kullandık.
kareHesaplaSonuc1=list(map(kareHesapla1,liste))
print(kareHesaplaSonuc1)

def carpmaYap(a):
  return lambda x : x*a

a=carpmaYap(10)
a(5)

from math import sqrt
sqrt(float(int("16")))

sqrt(int("16")) #ne olursa olsun sqrt fonksiyonu her zaman float değer döndürür.

from datetime import datetime
baslangıçZamanı=datetime.now()

isim=input("isminizi giriniz:")
bitişZamanı=datetime.now()

gecenSure=bitişZamanı-baslangıçZamanı
print(gecenSure)

from datetime import datetime
baslangıçZamanı=datetime.now()

toplam=0
for i in range (1,1000000):
  toplam +=i
  for j in range(1,1000):

isim = input("isminizi giriniz:")
bitişZamanı=datetime.now()

gecenSure=bitişZamanı-baslangıçZamanı
print(gecenSure)

"""#EBOBU BULAN FONKSİYONU YAZINIZ
48-120---24
"""

#benim çözümüm

def ebob(sayı1,sayı2):
  if sayı1<sayı2:
    küçükSayı=sayı1
    büyüksayı=sayı2
  else:
    küçükSayı=sayı2
    büyüksayı=sayı1
  for i in range(1,küçükSayı+1):
    if küçükSayı %i==0 and büyüksayı %i==0:
      print(i)
      i+=i
ebob(48,120)

#fotodakini yaz

def ebobHesapla(sayı1,sayı2):    #hpcanınnçözümü
  minSayi=sayı1
  if sayı1>=sayı2:
    minSayi=sayı2

def sayiGir():
  return int(input("Bir sayı giriniz:"))

def main():
  sayı1=sayiGir()
  sayı2=sayiGir()
  ebobSonuc=ebobHesapla(sayı1,sayı2)
  print("girilen sayıların EBOBu : ",ebobSonuc)

if __name__=="__main__":
  main()

main()



"""verilen listedeki elemanların 10 ile 20 arasında olan elemanların karelerinin toplamını bul

test listesi=[5,12,17,23,30,8,14]
cevap:629
"""

liste=[5,12,17,23,30,8,14]  #benim çözüm ama fonk yapmak gerekmiş zaten 0 alıyorum.
kareToplam=0
for i in range(i,len(liste)):
  if liste[i]>10 and liste[i]<20:
    karesi=liste[i]**2
    kareToplam+=karesi
  i+=i
print(kareToplam)

def karelerToplamı(sayılar):                               #hocanın çözümü
  filtrelendi=filter(lambda x: 10<= x <=20, sayılar)
  kareler=map(lambda x: x**2, filtrelendi)
  toplam=sum(kareler)
  return toplam

testListesi=[5,12,17,23,30,8,14]
sonuc=karelerToplamı(testListesi)
print(sonuc)